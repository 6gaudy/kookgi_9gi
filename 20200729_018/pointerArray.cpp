#include "config.h"

void main() {

	int data[] = { 100, 200, 300, 400, 500 }, * pData;

//	배열의 이름은 그 배열이 메모리에 생성된 시작 주소를 의미하는 번지 상수로 사용되며 배열 요소는 일반 변수와 똑같이 취급된다.
	cout << data << endl;
	cout << &data << endl;
	cout << data[0] << endl;
	cout << &data[0] << endl;
	cout << "=====================================================================" << endl;

	pData = data;
	pData = &data[0];

	for (int i = 0; i < 5; i++) {
		cout << "data[" << i << "] = " << data[i] << endl;
	}
	cout << "=====================================================================" << endl;

//	결론 => 포인터 변수를 배열처럼 사용할 수 있다.
	for (int i = 0; i < 5; i++) {
		cout << "pData[" << i << "] = " << pData[i] << endl;
	}
	cout << "=====================================================================" << endl;

//	포인터 연산
//	포인터 변수에는 덧셈과 뺄셈만 가능하고 덧셈과 뺄셈이 단순히 1씩 더해지고 빼지는 것이 아니라 연산되는 숫자에 포인터 변수를 선언할 때
//	붙여준 자료형의 크기를 곱한 만큼이 더해지고 빼진다. => 곱셈과 나눗셈은 불가능하다.

	for (int i = 0; i < 5; i++) {
		cout << "data[" << i << "]가 메모리에 생성된 주소 : " << &data[i] << endl;
	}
	cout << "=====================================================================" << endl;

	for (int i = 0; i < 5; i++) {
		cout << "pData + " << i << " = " << pData + i << endl;
	}
	cout << "=====================================================================" << endl;

	for (int i = 0; i < 5; i++) {
		cout << "*(pData + " << i << ") = " << *(pData + i) << endl;
	}
	cout << "=====================================================================" << endl;

	for (int i = 0; i < 5; i++) {
		cout << "*pData + " << i << " = " << *pData + i << endl;
	}
	cout << "=====================================================================" << endl;

//	==================================================================================================================

//	int* score = (int*)malloc(sizeof(int) * 5);
//	int* score = new int[5];



}