#include "config.h"

//	사원 1명의 출장비 내역을 기억할 구조체를 선언한다.
struct Money {
	char name[11];			// 이름
	int money;				// 출장비
	int pm[10] = { 0 };		// 화폐 권종별 매수
};

void main() {

	int p, tm[10] = { 0 };
	char n[11];
	
//	사원별 출장비 정보를 기억할 구조체 배열을 선언한다.
	Money money[3];

	int i = 0;
	while (true) {
//		사원의 이름과 출장비를 입력받는다. => 이름에 "QUIT"가 입력되면 전체 결과를 출력한다.
		printf("이름과 출장비를 입력하세요 : ");
		scanf_s("%s", n, sizeof(n));
		_strupr_s(n);
		if (!strcmp(n, "QUIT")) {
			break;
		}
		scanf_s("%d", &p);

//		입력받은 데이터를 구조체에 저장한다.
		strcpy_s(money[i].name, n);
		money[i].money = p;
		
//		화폐 권종별 매수를 구조체에 저장한다.
		int m = 50000, sw = 1;
		for (int k = 0; k < 10; k++) {
			money[i].pm[k] = p / m;
			p %= m;
			if (sw == 1) {
				m /= 5;
				sw = 0;
			}
			else {
				m /= 2;
				sw = 1;
			}
//			권종별 전체 화폐 매수를 계산한다.
			tm[k] += money[i].pm[k];
		}

		i++;
	} // while 끝

//	모든 사원의 출장비 처리가 완료되면 결과를 출력한다.
	printf("==========================================================================\n");
	printf("                         출장비 지급 내역서\n");
	printf("==========================================================================\n");
	printf(" 이름   출장비 50000 10000  5000  1000   500   100    50    10     5     1\n");
	printf("==========================================================================\n");

//	구조체에 저장된 데이터의 개수만큼 반복하며 개인별 출장비 내역을 출력한다.
	for (int j = 0; j < i; j++) {
		printf("%6s %7d", money[j].name, money[j].money);
		for (int k = 0; k < 10; k++) {
			printf("%6d", money[j].pm[k]);
		}
		printf("\n");
	}

	printf("==========================================================================\n");
	printf("전체 화폐 매수");
	for (int k = 0; k < 10; k++) {
		printf("%6d", tm[k]);
	}
	printf("\n==========================================================================\n");
	

}