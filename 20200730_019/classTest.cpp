#include "config.h"

//	class 클래스이름 {
//	[접근 권한 지정자:]				// 생략 가능, 생략시 private이 기본 접근 권한으로 사용된다.
//		클래스 멤버 변수 선언;
//		...;
//	[접근 권한 지정자:]
//		[생성자 함수]				// 생략 가능, 생략시 컴파일러가 아무런 일도 하지 않는 기본 생성자를 자동으로 만들어준다.
//		클래스 멤버 함수 선언;		// 클래스의 멤버 변수에 저장된 데이터를 처리한다.
//		...;
//	};

//	접근 권한 지정자
//	멤버 변수는 일반적으로 private 권한으로 선언하고 멤버 함수는 일반적으로 public 권한으로 선언한다.
//	private   => 클래스 외부에서 클래스 내부의 멤버에 접근할 수 없다.
//	protected => 현재 클래스와 현재 클래스를 상속받은 자식 클래스에서만 접근할 수 있다.
//	public    => 모든 위치에서 자유롭게 접근할 수 있다.

struct Struct {
	int data;
};

class Class {
public:
	int data;
};

void main() {

	Struct s;
	s.data = 100;

//	클래스의 기본 생성자를 이용해 객체(클래스를 이용해서 만든 변수)를 만든다.
//	[class] 클래스이름 객체이름;
	class Class c;
	c.data = 200;
//	[class] 클래스이름* 클래스포인터변수이름 = new 기본생성자();
	Class* c2 = new Class();
	c2->data = 300;

	delete c2;

}

