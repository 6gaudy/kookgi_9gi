#include "config.h"

void main() {

//	c언어에서 문자 배열은 문자열 데이터를 처리하기 위해 주로 만들어 사용한다.
	char name[] = { 'k', 'o', 'r', 'e', 'a', 'i', 't' };
//	sizeof() : 인수로 지정된 기억장소가 메모리에서 차지하는 크기를 byte 단위로 얻어온다.
//	printf("name 배열의 크기 : %d\n", sizeof(name)); // 7
	for (int i = 0; i < sizeof(name); i++) {
		printf("name[%d] = %c\n", i, name[i]);
	}
	printf("===============================\n");

//	배열 이름은 그 배열 전체를 의미한다. => 배열의 이름은 그 배열이 메모리에 생성된 시작 주소를 의미하는 번지(주소)
//	상수이다.
//	printf("name 배열이 메모리에 생성된 주소 = %d\n", name);
//	"%s"를 사용해서 문자 배열에 저장된 데이터를 출력할 때 문자열의 시작 부터 문자열의 끝(null 문자, \0)까지
//	출력한다. name 배열에는 문자열의 끝을 의미하는 null 문자가 없기 때문에 name 배열에 저장된 문자열 뒤에 쓰레기가
//	같이 출력된다.
	printf("name = %s\n", name);
	printf("===============================\n");

//	문자 배열을 초기치를 사용해서 초기화 할 경우 문자열의 끝을 의미하는 null 문자를 반드시 맨 마지막에 붙여야한다.
//	char name2[] = { 'k', 'o', 'r', 'e', 'a', 'i', 't', '\0' };
//	문자 배열을 선언할 때 문자열을 사용해서 초기화 시킬 수 있으며 이 때 문자열의 끝을 의미하는 null 문자는 입력
//	하지 않아도 자동으로 입력된다.
	char name2[] = "koreait";
	printf("name2 배열의 크기 : %d\n", sizeof(name2)); // 8

	for (int i = 0; i < sizeof(name2) - 1; i++) {
		printf("name2[%d] = %c\n", i, name2[i]);
	}
	printf("===============================\n");

	printf("name2 = %s\n", name2);
	printf("===============================\n");

//	배열 요소에 저장된 값이 null 문자가 아닐 때 까지 출력하면 된다.
	for (int i = 0; name2[i] != '\0'; i++) {
		printf("name2[%d] = %c\n", i, name2[i]);
	}
	printf("===============================\n");

//	strlen() : 인수로 지정된 배열에서 null 문자를 제외한 나머지 문자의 크기(개수)를 얻어온다.
	for (int i = 0; i < strlen(name2); i++) {
		printf("name2[%d] = %c\n", i, name2[i]);
	}
	printf("===============================\n");

//	문자 배열에 "="를 사용해서 값을 넣어줄 수 있는 경우는 배열을 선언할 때만 가능하다.
//	name2 = "academy";	// 에러 발생
//	strcpy_s(사본, 원본) : 원본 문자열을 사본 배열로 복사한다. => 사본의 크기가 원본의 크기보다 크거나 같아야 한다.
	strcpy_s(name2, "academy");
	printf("name2 = %s\n", name2);

//	문자열 입력받기
//	문자열을 입력받아 저장할 배열은 실제 입력되는 문자열의 크기보다 최소한 1byte가 커야한다. => null 문자가 저장될
//	자리가 필요하다.
	char nickname[11];

	printf("별명을 입력하세요 : ");
//	_CRT_SECURE_NO_WARNINGS 처리를 하면 scanf() 함수를 사용해서 데이터를 입력받을 수 있다.
//	nickname 배열은 문자열의 끝을 의미하는 '\0'을 제외하면 최대 10byte 까지 입력을 받을 수 있지만 scanf() 함수를
//	사용하면 제한된 크기보다 더 많은 문자열이 입력될 수 있고 이로 인해 시스템에 문제를 발생시킬 수 있다.
//	scanf("%s", nickname);
//	scanf_s() 함수는 숫자일 경우 잘 입력되지만 문자열을 입력받을 경우 반드시 3번째 인수로 입력받을 문자열의 최대
//	크기를 지정해야 한다. => 최대 크기를 초과하는 문자열이 입력되면 아예 입력을 받지 않는다.
//	일반 변수 또는 배열의 요소는 앞에 '&'를 붙여야 하지만 배열 이름 앞에는 '&'를 붙이지 않아도 상관없다.
	scanf_s("%s", nickname, sizeof(nickname));
//	cin을 사용해서 입력을 받으면 입력받을 문자열의 크기보다 큰 문자열이 입력될 경우 에러가 발생되며 프로그램이
//	중지된다.
//	cin >> nickname;
	printf("%s님 안녕하세요\n", nickname);

}